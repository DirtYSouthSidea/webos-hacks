Enabled download functionality in the browser application.

From: Rod Whitby <rod@whitby.id.au>


---

 .../app/controllers/downloaddialog-assistant.js    |   45 ++++++++++++++++++++
 .../app/controllers/page-assistant.js              |   13 ++++--
 .../app/views/download/download-container.html     |    4 --
 .../app/views/download/download-popup.html         |    8 ++++
 .../app/views/page/page-scene.html                 |    4 ++
 .../applications/com.palm.app.browser/sources.json |   12 +++++
 6 files changed, 80 insertions(+), 6 deletions(-)
 create mode 100644 usr/palm/applications/com.palm.app.browser/app/controllers/downloaddialog-assistant.js
 create mode 100644 usr/palm/applications/com.palm.app.browser/app/views/download/download-popup.html


diff --git a/usr/palm/applications/com.palm.app.browser/app/controllers/downloaddialog-assistant.js b/usr/palm/applications/com.palm.app.browser/app/controllers/downloaddialog-assistant.js
new file mode 100644
index 0000000..762edfd
--- /dev/null
+++ b/usr/palm/applications/com.palm.app.browser/app/controllers/downloaddialog-assistant.js
@@ -0,0 +1,45 @@
+/**
+ * A network dialog assistant for display of current network status.
+ */
+DownloadDialogAssistant = Class.create({
+	
+	initialize: function(params) {
+		this.onDismiss = params.onDismiss;
+		this.onAccept = params.onAccept;
+		this.controller= params.sceneAssistant.controller;
+		
+		// Button handlers.
+		this.onDismissHandler = this.handleDismiss.bindAsEventListener(this);
+		this.onAcceptHandler = this.handleAccept.bindAsEventListener(this);
+	},
+	
+	setup: function(widget) {
+		this.widget = widget;
+		this.controller.get('acceptButton').addEventListener(Mojo.Event.tap, this.onAcceptHandler);
+		this.controller.get('acceptButton').focus();
+		this.controller.get('dismissButton').addEventListener(Mojo.Event.tap, this.onDismissHandler);
+		this.controller.get('dismissButton').focus();
+	},
+	
+	handleDismiss: function() {
+		this.onDismiss();
+		delete this.onDismiss;
+		this.widget.mojo.close();
+	},
+	handleAccept: function() {
+		this.onAccept();
+		delete this.onAccept;
+		this.widget.mojo.close();
+	},
+	
+	cleanup: function() {
+		Mojo.Log.info("NetworkDialogAssistant#cleanup()");
+		Mojo.Event.stopListening(this.controller.get('dismissButton'), Mojo.Event.tap, this.onDismissHandler);
+		Mojo.Event.stopListening(this.controller.get('acceptButton'), Mojo.Event.tap, this.onAcceptHandler);
+		
+		// Send a dismiss if NOT already sent a response
+		if (this.onDismiss) {
+			this.onDismiss();
+		}	
+	}
+});
diff --git a/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js b/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js
index 444cc98..290ac3e 100644
--- a/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js
+++ b/usr/palm/applications/com.palm.app.browser/app/controllers/page-assistant.js
@@ -119,6 +119,9 @@ PageAssistant.prototype.setup = function() {
 		this._webView.addEventListener(Mojo.Event.webViewUrlRedirect, this._onUrlRedirect.bind(this), false);
 		this._webView.addEventListener(Mojo.Event.webViewModifierTap, this._onModifierTapHandler, false);
 		this._webView.addEventListener(Mojo.Event.webViewUpdateHistory, this._onUpdateHistoryHandler, false);
+		this._downloadController = new DownloadController(this.controller);        
+		this._downloadController.setup();
+
 	}
 	catch (e) {
 		Mojo.Log.logException(e, 'PageAssistant#setup');
@@ -1010,12 +1013,16 @@ PageAssistant.prototype._downloadResource = function(uri) {
 		// we are unable to perform the download.
 		if (!this._downloadWidgetElement) {
 			this._downloadWidgetElement = this.controller.showDialog({
-				template: 'download/download-nosupport-dialog',
-				assistant: new NetworkDialogAssistant({
+				template: 'download/download-popup',
+				assistant: new DownloadDialogAssistant({
 					sceneAssistant: this,
 					onDismiss: function() {
 						this._onPopupHandler('close');
 						delete this._downloadWidgetElement;
+					}.bind(this),
+					onAccept: function() {
+						this._onPopupHandler('close');
+					        this._downloadController.downloadResource(uri);
 					}.bind(this)})
 				});
 
@@ -1096,7 +1103,7 @@ PageAssistant.prototype._onWebViewResourceHandoff = function(event) {
 			var mime = event.mimeType || '';
 			this._getResourceInfo(event.url, mime,
 				function(response) { // onSuccess
-					if (response.returnValue && response.canStream) {
+					if (response.returnValue && response.canStream && response.mimeByExtenstion) {
 						this._streamResource(event.url, response.appIdByExtension, response.mimeByExtension);
 					}
 					else {
diff --git a/usr/palm/applications/com.palm.app.browser/app/views/download/download-container.html b/usr/palm/applications/com.palm.app.browser/app/views/download/download-container.html
index b5f171f..36b5c41 100644
--- a/usr/palm/applications/com.palm.app.browser/app/views/download/download-container.html
+++ b/usr/palm/applications/com.palm.app.browser/app/views/download/download-container.html
@@ -1,3 +1 @@
-<div x-mojo-elements="List" class="palm-list no-lines">
-	#{listElements}
-</div>
\ No newline at end of file
+#{listElements}
diff --git a/usr/palm/applications/com.palm.app.browser/app/views/download/download-popup.html b/usr/palm/applications/com.palm.app.browser/app/views/download/download-popup.html
new file mode 100644
index 0000000..b46f4b0
--- /dev/null
+++ b/usr/palm/applications/com.palm.app.browser/app/views/download/download-popup.html
@@ -0,0 +1,8 @@
+<div id="palm-dialog-content" class="palm-dialog-content">
+	<div class="dialog-message" x-mojo-loc=""> Cannot find an application which can open this file. Would you like to download it to /media/internal/downloads?</div>
+</div>
+
+<div class="palm-dialog-buttons">
+	<div class="dismiss palm-button" id="acceptButton" x-mojo-loc="" x-mojo-tap-highlight="momentary">Yes</div>
+	<div class="dismiss palm-button" id="dismissButton" x-mojo-loc="" x-mojo-tap-highlight="momentary">No</div>
+</div>
diff --git a/usr/palm/applications/com.palm.app.browser/app/views/page/page-scene.html b/usr/palm/applications/com.palm.app.browser/app/views/page/page-scene.html
index a8fc62d..26c5c87 100644
--- a/usr/palm/applications/com.palm.app.browser/app/views/page/page-scene.html
+++ b/usr/palm/applications/com.palm.app.browser/app/views/page/page-scene.html
@@ -18,3 +18,7 @@
 </div> 
 
 
+<div id="downloadListScroller" class="browser-download" x-mojo-element="Scroller">
+    <div id="downloadList" class="palm-list" x-mojo-element="List"></div>
+</div>
+
diff --git a/usr/palm/applications/com.palm.app.browser/sources.json b/usr/palm/applications/com.palm.app.browser/sources.json
index 31ce7bf..179329d 100644
--- a/usr/palm/applications/com.palm.app.browser/sources.json
+++ b/usr/palm/applications/com.palm.app.browser/sources.json
@@ -18,6 +18,18 @@
   "source": "\/usr\/lib\/luna\/luna-network\/ConnectionWidget.js",
   "scenes": ["page", "startpage"]
  },
+{
+    "source":"app\/models\/download-model.js"
+ },
+ {
+    "source":"app\/controllers\/download-request.js"
+ },
+ {
+    "source":"app\/controllers\/downloaddialog-assistant.js"
+ },
+ {
+    "source":"app\/controllers\/download-controller.js"
+ },
  {
   "source": "app\/controllers\/page-assistant.js",
   "scenes": "page"
