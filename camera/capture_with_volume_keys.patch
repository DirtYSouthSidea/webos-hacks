Creating a patch which will allow you to snap pictures using the volume keys

Tested-On: 1.1

Index: /usr/palm/applications/com.palm.app.camera/app/controllers/capture-assistant.js
===================================================================
--- .orig/usr/palm/applications/com.palm.app.camera/app/controllers/capture-assistant.js
+++ /usr/palm/applications/com.palm.app.camera/app/controllers/capture-assistant.js
@@ -34,7 +34,7 @@ CaptureAssistant = Class.create({
 			this.sublaunch = false;
 			this.defaultFilename = null;
 		}
-		
+		this.volumeKeySubscription = undefined;
 	},
 
 	
@@ -87,6 +87,17 @@ CaptureAssistant = Class.create({
 			elemC.style.display = '';
 		}
 		
+		// listen to volume key events
+		this.volumeKeySubscription = new Mojo.Service.Request(
+			'palm://com.palm.keys/audio',
+			{
+				method: 'status',
+				parameters: {'subscribe': true},
+				onFailure: function() { Mojo.Log.error("Could not subscribe to volume key events."); },
+				onSuccess: this.handleVolumeKeys.bind(this)
+			}
+		);
+
 		llog("CaptureAssistant::setup() finished");
 	},
 	
@@ -173,6 +184,11 @@ CaptureAssistant = Class.create({
 		}
 		
 		this.cameraControl.closeCamera();
+
+		// Clean up listener for volume keys
+		if(this.volumeKeySubscription) {
+			this.volumeKeySubscription.cancel();
+		}
 	},
 	
 	handleCommand: function(event){
@@ -186,7 +202,14 @@ CaptureAssistant = Class.create({
 		
 	},
 	
-		
+	// capture on release of volume keys
+	handleVolumeKeys: function(payload) {
+		// capture when either volume up or down buttons are released
+		if(payload.state === 'up' && (payload.key === 'volume_up' || payload.key === 'volume_down')) {
+			this.cameraControl.capture();
+		}
+	},
+
 	onKeyPress: function(event) {
 		// Space bar also takes a picture.
 		if (Mojo.Char.spaceBar == event.originalEvent.keyCode){
